((e,r)=>{var t="0.1.0";let s={log:(...e)=>console.log("[MiniApp]",...e),error:(...e)=>console.error("[MiniApp]",...e),warn:(...e)=>console.warn("[MiniApp]",...e)},i=(s.log(`Initializing SuperApp Bridge v${t}...`),{}),l={},p=1,n={},d={version:t,call(n,a,o={}){return new Promise((e,t)=>{if("string"==typeof n&&n)if("string"==typeof a&&a){let r=`sa_${Date.now()}_`+p++;var i=setTimeout(()=>{l[r]&&d.handleFailure(r,{error:"Request Timeout"})},6e4),e=(l[r]={resolve:e,reject:t,timestamp:Date.now(),timeoutId:i},JSON.stringify({id:r,className:n,method:a,params:o}));if(s.log("Sending to Flutter:",e),window.SuperAppChannel)try{window.SuperAppChannel.postMessage(e)}catch(e){clearTimeout(i),t(new Error("Failed to send message: "+e.message)),delete l[r]}else s.error("SuperAppChannel is NOT available!"),clearTimeout(i),t(new Error("SuperAppChannel is not available!")),delete l[r]}else t(new Error("Invalid methodName"));else t(new Error("Invalid className"))})},handleSuccess(e,r){var t;l[e]&&(clearTimeout(l[e].timeoutId),s.log("Success Response:",r),t=Date.now()-l[e].timestamp,s.log(`Request took ${t}ms`),l[e].resolve(r),delete l[e])},handleFailure(e,r){l[e]&&(clearTimeout(l[e].timeoutId),s.error("Error Response:",r),l[e].reject(r),delete l[e])},addListener(e,r){if("string"==typeof e&&e){if("function"==typeof r)return n[e]||(n[e]=[]),n[e].push(r),s.log("Added listener for event: "+e),()=>d.removeListener(e,r);s.error("Event callback must be a function")}else s.error("Invalid event name")},removeListener(e,r){var t;n[e]&&(t=n[e].length,n[e]=n[e].filter(e=>e!==r),t!==n[e].length&&s.log("Removed listener for event: "+e),0===n[e].length)&&delete n[e]},dispatchEvent(r,t){s.log(`Dispatching event '${r}' with data:`,t),n[r]&&n[r].forEach(e=>{try{e(t)}catch(e){s.error(`Error in event listener for '${r}':`,e)}})},getRegisteredEvents(){return Object.keys(n)},setParams(e){"object"!=typeof e||null===e?s.error("Invalid params object"):(i={...i,...e},s.log("Params updated:",i),d.dispatchEvent("paramsUpdated",i))},getParams(e){return e?i[e]:{...i}},receiveMessage(e){try{s.log("Received from Flutter:",e);var r=(r=>{try{return"string"==typeof r?JSON.parse(r):r}catch(e){return s.error("Invalid JSON:",r,e),null}})(e);r&&(r.event?d.dispatchEvent(r.event,r.data):r.id&&"boolean"==typeof r.success&&(r.success?d.handleSuccess(r.id,r.data):d.handleFailure(r.id,r.error||{error:"Unknown error"})))}catch(e){s.error("Error processing message:",e)}}};r.superapp=e.superapp=d,s.log("SuperApp Bridge is Ready!"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{d.call("superAppBase","initialized",{}).then(()=>s.log("Notified SuperApp that MiniApp is initialized")).catch(e=>s.error("Error notifying SuperApp:",e))}):d.call("superAppBase","initialized",{}).then(()=>s.log("Notified SuperApp that MiniApp is initialized")).catch(e=>s.error("Error notifying SuperApp:",e))})(window,window.lib||(window.lib={}));